/*--------------------- BEGIN kppa_CUDA_jacobian.cu BEGIN ---------------------*/
/* @file kppa_CUDA_jacobian.cu                                                 */
/* @author charlesj                                                            */
/* @date 2015-01-22 16:21:36.202320                                            */
/* @brief The Jacobian of the chemical model                                   */
/*                                                                             */
/* The Jacobian of the chemical model                                          */
/*                                                                             */
/* This file was generated by Kppa: http://www.paratools.com/Kppa              */
/*-----------------------------------------------------------------------------*/
#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include <string.h>
#include <math.h>
#include "kppa_CUDA_cu_parameters.h"
#include "kppa_CUDA_sparse.h"
#include "kppa_CUDA_jacobian.h"


/* Indices of variable species concentrations, grouped by interaction */
__device__
int IVAR[330] = { 26, 81, 81, 81, 81, 81, 81, 81, 79, 81, 81, 81, 81, 81, 81,
    81, 81, 81, 1, 39, 65, 81, 81, 81, 81, 79, 81, 81, 81, 39, 74, 81, 81,
    79, 77, 76, 72, 37, 81, 34, 26, 76, 76, 81, 79, 77, 81, 81, 79, 77, 81,
    79, 77, 81, 81, 79, 77, 81, 79, 74, 72, 75, 80, 76, 72, 75, 80, 81, 77,
    81, 79, 76, 72, 75, 80, 76, 72, 75, 80, 76, 72, 75, 80, 81, 76, 72, 75,
    80, 76, 72, 75, 80, 72, 75, 80, 76, 76, 72, 75, 80, 81, 76, 72, 60, 74,
    76, 72, 75, 80, 61, 81, 79, 81, 79, 74, 76, 72, 75, 80, 26, 72, 72, 76,
    72, 75, 80, 79, 76, 72, 75, 80, 79, 81, 79, 77, 81, 81, 79, 76, 72, 75,
    80, 77, 76, 74, 72, 65, 72, 79, 81, 75, 71, 73, 51, 52, 55, 56, 53, 78,
    80, 58, 48, 64, 61, 57, 47, 67, 66, 37, 60, 76, 72, 75, 80, 34, 72, 77,
    79, 79, 81, 80, 64, 47, 60, 76, 72, 75, 71, 73, 51, 52, 55, 56, 53, 78,
    80, 58, 48, 64, 57, 47, 61, 67, 66, 77, 72, 81, 39, 76, 79, 75, 73, 51,
    52, 55, 56, 53, 80, 64, 58, 48, 71, 78, 61, 57, 67, 66, 37, 60, 76, 81,
    72, 74, 36, 43, 68, 45, 40, 42, 49, 76, 72, 75, 80, 76, 74, 72, 74, 63,
    70, 46, 62, 50, 30, 36, 43, 68, 45, 40, 67, 42, 66, 18, 74, 76, 72, 75,
    71, 73, 51, 52, 55, 56, 53, 78, 80, 58, 48, 64, 57, 47, 61, 67, 66, 77,
    35, 76, 74, 44, 32, 72, 15, 41, 8, 21, 10, 14, 36, 43, 68, 19, 20, 30,
    63, 70, 54, 46, 62, 50, 29, 59, 27, 33, 69, 45, 40, 42, 9, 38, 49, 28,
    17, 31, 22, 18, 18, 13, 23, 24, 25 };

/* Indices in IVAR of first variable concentration in interaction */
__device__
int CVAR[355] = { 0, 0, 1, 2, 3, 4, 4, 4, 5, 6, 7, 7, 7, 8, 9, 10, 11, 12,
    13, 14, 15, 16, 17, 18, 19, 20, 21, 21, 22, 22, 23, 23, 24, 25, 26, 27,
    27, 28, 29, 29, 30, 31, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43,
    44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 53, 54, 55, 56, 57, 57, 57, 58,
    59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 69, 70, 71, 72, 73, 74, 75,
    76, 77, 78, 79, 80, 81, 82, 83, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92,
    93, 94, 95, 96, 97, 98, 99, 100, 100, 101, 102, 103, 104, 105, 106, 107,
    108, 109, 110, 110, 111, 112, 112, 112, 113, 114, 115, 116, 117, 118,
    119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
    134, 135, 135, 136, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
    146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
    161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
    174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
    188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
    202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216,
    217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 229,
    229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
    243, 244, 244, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
    255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
    269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282,
    283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 293, 294, 295,
    296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309,
    310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323,
    324, 325, 326, 327, 328, 329, 330 };

/* Indices of fixed species concentrations, grouped by interaction */
__device__
int IFIX[1] = { 0 };

/* Indices in IFIX of first fixed concentration in interaction */
__device__
int CFIX[355] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };

/* Indices of reaction rates, one per interaction */
__device__
int IRCT[354] = { 193, 23, 50, 173, 52, 75, 3, 189, 53, 47, 41, 42, 183, 186,
    187, 188, 57, 58, 51, 185, 190, 191, 192, 23, 24, 25, 14, 68, 181, 182,
    12, 66, 59, 95, 184, 5, 45, 69, 73, 21, 22, 8, 33, 54, 96, 100, 170, 171,
    172, 174, 21, 24, 35, 154, 155, 156, 48, 162, 163, 164, 55, 97, 101, 4,
    44, 71, 99, 103, 16, 17, 63, 92, 147, 148, 149, 150, 86, 115, 129, 141,
    175, 176, 19, 65, 94, 78, 107, 121, 133, 79, 108, 122, 134, 82, 111, 125,
    137, 15, 62, 80, 109, 123, 135, 81, 110, 124, 136, 143, 144, 145, 146,
    85, 114, 128, 140, 13, 67, 177, 178, 179, 180, 89, 117, 151, 152, 153,
    18, 64, 93, 9, 10, 60, 90, 74, 84, 116, 130, 142, 25, 32, 165, 166, 167,
    168, 169, 157, 158, 159, 160, 161, 56, 98, 102, 20, 70, 11, 61, 91, 87,
    105, 119, 131, 28, 29, 30, 31, 32, 39, 46, 104, 105, 106, 107, 108, 109,
    110, 111, 112, 113, 114, 115, 116, 117, 143, 148, 158, 166, 171, 178, 77,
    106, 120, 132, 0, 22, 30, 36, 38, 40, 43, 72, 74, 147, 180, 76, 104, 118,
    119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 144, 149,
    151, 159, 167, 26, 29, 34, 35, 37, 76, 77, 78, 79, 80, 81, 82, 83, 84,
    85, 86, 87, 88, 89, 146, 157, 165, 170, 177, 1, 2, 26, 27, 28, 36, 100,
    101, 102, 103, 156, 164, 176, 88, 112, 126, 138, 6, 7, 37, 38, 39, 40,
    90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 155, 161, 163, 169, 186, 72, 83,
    113, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
    145, 150, 152, 160, 168, 27, 33, 34, 43, 44, 45, 46, 47, 48, 49, 50, 51,
    52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
    70, 71, 154, 162, 173, 174, 175, 182, 183, 184, 185, 187, 188, 189, 190,
    191, 192 };

/* Left-side stoichiometric coefficients */
__device__
double LHS[354] = { 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 };

/* Indices of species interactions in the Jacobian formulation */
__device__
int IINT[1747] = { 9, 314, 45, 59, 62, 67, 81, 152, 254, 255, 256, 257, 259,
    260, 59, 62, 88, 92, 96, 102, 106, 124, 136, 152, 161, 192, 215, 218,
    255, 256, 259, 264, 289, 290, 291, 292, 293, 294, 295, 296, 297, 304, 16,
    17, 20, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 150, 151, 152, 255,
    256, 257, 258, 259, 278, 279, 281, 283, 322, 323, 324, 325, 338, 339,
    340, 351, 26, 129, 2, 317, 3, 47, 187, 341, 4, 319, 5, 133, 201, 6, 226,
    309, 7, 15, 349, 350, 8, 320, 7, 9, 13, 14, 15, 285, 314, 348, 349, 350,
    10, 11, 198, 270, 12, 118, 188, 345, 13, 14, 15, 285, 348, 349, 16, 324,
    17, 325, 18, 318, 19, 49, 342, 347, 8, 16, 17, 20, 21, 53, 54, 55, 57,
    58, 59, 60, 61, 62, 65, 67, 150, 151, 152, 255, 256, 257, 258, 259, 278,
    279, 281, 283, 320, 322, 323, 324, 325, 338, 339, 340, 351, 352, 16, 17,
    21, 22, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 150, 151, 152, 255,
    256, 257, 258, 259, 278, 279, 281, 283, 322, 323, 324, 325, 338, 339,
    340, 352, 353, 16, 17, 22, 53, 54, 55, 57, 58, 59, 60, 61, 62, 150, 151,
    152, 255, 256, 258, 259, 278, 279, 281, 283, 322, 323, 324, 325, 339,
    340, 353, 1, 23, 24, 25, 51, 138, 248, 26, 27, 178, 288, 335, 28, 29,
    120, 203, 344, 30, 31, 169, 205, 333, 16, 17, 32, 33, 276, 324, 325, 326,
    29, 34, 49, 117, 119, 247, 342, 344, 346, 35, 36, 164, 195, 312, 37, 38,
    200, 286, 336, 1, 23, 24, 39, 40, 50, 51, 193, 194, 249, 266, 41, 42, 55,
    59, 67, 139, 165, 166, 257, 258, 259, 308, 43, 44, 45, 254, 277, 321, 46,
    47, 48, 65, 187, 246, 338, 46, 49, 66, 246, 280, 342, 36, 39, 40, 50, 52,
    162, 167, 168, 194, 197, 224, 227, 248, 249, 250, 251, 252, 265, 268,
    269, 307, 312, 313, 53, 54, 55, 258, 281, 339, 19, 45, 55, 56, 59, 62,
    67, 68, 69, 70, 71, 81, 117, 119, 126, 127, 128, 129, 130, 131, 132, 134,
    136, 137, 152, 155, 218, 237, 247, 254, 255, 256, 257, 258, 259, 260,
    271, 273, 274, 301, 315, 327, 330, 331, 347, 57, 58, 59, 259, 283, 340,
    59, 60, 61, 62, 255, 259, 278, 322, 11, 33, 63, 64, 71, 84, 128, 132,
    157, 167, 199, 269, 271, 272, 273, 274, 275, 276, 310, 311, 65, 66, 67,
    257, 280, 338, 68, 69, 70, 71, 111, 113, 114, 134, 136, 137, 216, 218,
    237, 238, 273, 299, 301, 330, 33, 72, 73, 74, 75, 184, 202, 220, 276,
    303, 17, 76, 77, 78, 79, 180, 217, 239, 300, 325, 3, 46, 48, 59, 67, 80,
    81, 140, 142, 143, 144, 223, 245, 246, 257, 259, 260, 284, 306, 341, 343,
    76, 78, 79, 82, 83, 84, 111, 113, 114, 216, 217, 238, 239, 275, 299, 300,
    332, 4, 85, 86, 87, 88, 172, 209, 231, 292, 319, 8, 89, 90, 91, 92, 173,
    210, 232, 293, 320, 93, 94, 95, 96, 150, 176, 213, 235, 296, 323, 18, 55,
    85, 87, 88, 89, 91, 92, 93, 95, 96, 97, 98, 145, 147, 148, 149, 152, 153,
    189, 191, 192, 208, 209, 210, 213, 222, 230, 231, 232, 235, 244, 256,
    258, 282, 291, 292, 293, 296, 305, 318, 329, 43, 99, 100, 101, 102, 174,
    211, 233, 294, 321, 60, 103, 104, 105, 106, 175, 212, 234, 295, 322, 4,
    8, 32, 37, 107, 108, 109, 110, 134, 136, 137, 183, 218, 219, 237, 243,
    301, 302, 319, 320, 326, 336, 16, 111, 112, 113, 114, 179, 216, 238, 299,
    324, 73, 77, 86, 90, 94, 100, 104, 107, 112, 115, 116, 135, 141, 146,
    159, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184,
    185, 186, 190, 262, 334, 12, 28, 67, 80, 117, 118, 119, 120, 188, 203,
    247, 257, 343, 345, 44, 54, 58, 61, 121, 122, 123, 124, 125, 151, 182,
    221, 242, 277, 278, 279, 281, 283, 304, 34, 76, 78, 79, 81, 111, 113,
    114, 117, 119, 126, 127, 128, 134, 136, 137, 214, 216, 217, 218, 237,
    238, 239, 241, 247, 260, 261, 263, 264, 274, 297, 299, 300, 301, 331,
    346, 18, 19, 30, 31, 37, 45, 46, 48, 59, 62, 67, 68, 69, 74, 78, 87, 89,
    91, 93, 95, 96, 99, 101, 102, 103, 105, 106, 108, 113, 117, 119, 121,
    123, 124, 125, 129, 130, 131, 132, 136, 140, 142, 143, 144, 147, 152,
    160, 189, 191, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
    216, 217, 218, 219, 220, 221, 222, 223, 229, 230, 232, 233, 234, 235,
    242, 245, 246, 247, 254, 255, 256, 257, 259, 263, 271, 284, 289, 294,
    295, 296, 304, 306, 318, 327, 333, 336, 347, 5, 32, 82, 83, 84, 133, 134,
    135, 136, 137, 181, 201, 218, 237, 275, 301, 326, 332, 2, 4, 8, 18, 25,
    27, 36, 42, 64, 70, 83, 98, 127, 131, 138, 156, 168, 308, 311, 312, 313,
    316, 317, 318, 319, 320, 327, 328, 329, 330, 331, 332, 335, 57, 140, 141,
    142, 143, 144, 186, 223, 245, 284, 306, 340, 53, 145, 146, 147, 148, 149,
    185, 222, 244, 282, 305, 339, 140, 142, 143, 144, 150, 151, 152, 223,
    245, 256, 279, 284, 306, 323, 72, 85, 89, 122, 140, 145, 153, 154, 182,
    189, 202, 230, 231, 232, 244, 245, 337, 18, 55, 62, 85, 87, 88, 89, 91,
    92, 93, 95, 96, 99, 101, 102, 103, 105, 106, 115, 116, 121, 123, 124,
    125, 145, 147, 148, 149, 152, 153, 155, 156, 157, 158, 160, 161, 189,
    191, 192, 207, 208, 209, 210, 211, 212, 213, 221, 222, 230, 231, 232,
    233, 234, 235, 240, 242, 244, 255, 256, 258, 272, 282, 290, 291, 292,
    293, 294, 295, 296, 304, 305, 318, 328, 334, 2, 55, 59, 97, 158, 159,
    160, 161, 170, 207, 240, 258, 259, 290, 317, 9, 16, 17, 18, 30, 32, 34,
    35, 42, 45, 46, 47, 48, 55, 56, 59, 62, 67, 69, 70, 71, 73, 74, 76, 77,
    78, 79, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100,
    101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 117,
    118, 119, 122, 123, 126, 130, 131, 132, 134, 135, 136, 137, 139, 140,
    141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 155, 158, 159,
    160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
    174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
    188, 189, 190, 191, 192, 195, 204, 205, 206, 207, 208, 209, 210, 211,
    212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 229,
    230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 244, 245, 246,
    247, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264,
    269, 271, 273, 282, 284, 288, 289, 290, 291, 292, 293, 294, 295, 296,
    297, 299, 300, 301, 305, 306, 307, 308, 313, 314, 315, 318, 324, 325,
    326, 327, 330, 346, 18, 116, 154, 171, 189, 190, 191, 192, 208, 230, 291,
    318, 334, 337, 5, 10, 19, 28, 29, 35, 36, 38, 40, 46, 52, 63, 72, 76, 85,
    89, 93, 99, 103, 110, 111, 117, 120, 121, 123, 124, 125, 133, 134, 140,
    144, 145, 149, 153, 154, 158, 163, 164, 189, 193, 194, 195, 196, 198,
    199, 200, 201, 202, 203, 204, 221, 224, 225, 227, 228, 229, 230, 231,
    232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245,
    246, 247, 250, 253, 261, 266, 267, 270, 282, 284, 286, 287, 304, 310,
    312, 337, 344, 347, 26, 31, 62, 67, 74, 75, 78, 79, 87, 88, 91, 92, 95,
    96, 101, 102, 105, 106, 108, 109, 113, 114, 123, 124, 136, 137, 142, 143,
    147, 148, 152, 155, 160, 161, 169, 191, 192, 204, 205, 206, 207, 208,
    209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
    223, 229, 236, 255, 256, 257, 263, 264, 287, 289, 290, 291, 292, 293,
    294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 316,
    333, 6, 40, 46, 52, 76, 85, 89, 93, 99, 103, 110, 111, 117, 121, 134,
    140, 145, 158, 163, 189, 193, 194, 197, 204, 224, 225, 226, 227, 228,
    229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
    243, 244, 245, 246, 247, 250, 261, 265, 267, 268, 287, 309, 39, 45, 50,
    55, 59, 62, 67, 81, 152, 162, 196, 224, 248, 249, 250, 251, 252, 253,
    254, 255, 256, 257, 258, 259, 260, 307, 55, 59, 98, 177, 214, 241, 258,
    259, 261, 262, 263, 264, 297, 329, 10, 13, 33, 37, 44, 54, 58, 61, 64,
    66, 71, 84, 128, 132, 144, 149, 151, 157, 167, 196, 197, 198, 228, 253,
    265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278,
    279, 280, 281, 282, 283, 284, 285, 311, 336, 27, 38, 67, 75, 79, 81, 82,
    88, 92, 96, 97, 102, 106, 109, 114, 117, 124, 126, 127, 128, 134, 136,
    137, 143, 148, 156, 157, 161, 178, 192, 200, 215, 218, 236, 237, 247,
    257, 260, 264, 272, 274, 286, 287, 288, 289, 290, 291, 292, 293, 294,
    295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 328, 331,
    335, 2, 4, 6, 7, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26,
    27, 29, 30, 31, 32, 34, 36, 37, 41, 42, 43, 49, 53, 55, 56, 57, 59, 60,
    62, 63, 64, 65, 67, 70, 80, 81, 83, 98, 115, 116, 127, 131, 138, 150,
    152, 154, 156, 162, 163, 168, 199, 225, 226, 251, 252, 255, 256, 257,
    258, 259, 260, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317,
    318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331,
    332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346,
    347, 348, 349, 350, 351, 352, 353 };

/* Indices in IINT of first species interaction in each Jacobian entry */
__device__
int CINT[969] = { 0, 0, 0, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 14, 14, 15, 16, 17,
    18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 31, 32, 42, 42, 43, 44, 45, 48,
    51, 54, 56, 59, 64, 68, 76, 76, 77, 77, 78, 79, 80, 81, 82, 83, 84, 85,
    86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 103, 104, 108,
    110, 111, 112, 113, 114, 115, 116, 119, 120, 122, 123, 124, 125, 126,
    127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 140, 143, 146, 148,
    151, 156, 160, 170, 171, 172, 173, 174, 177, 180, 183, 185, 188, 193,
    197, 206, 207, 208, 209, 212, 215, 218, 221, 225, 229, 236, 237, 240,
    241, 242, 243, 245, 246, 247, 248, 250, 251, 252, 253, 255, 256, 257,
    258, 259, 260, 262, 263, 266, 267, 268, 269, 271, 271, 272, 275, 277,
    278, 279, 280, 282, 283, 284, 285, 286, 288, 290, 292, 292, 294, 295,
    296, 298, 299, 300, 301, 302, 304, 307, 308, 311, 312, 313, 314, 317,
    318, 319, 320, 321, 322, 323, 324, 324, 325, 326, 327, 328, 330, 332,
    332, 335, 337, 339, 344, 347, 350, 353, 354, 355, 356, 357, 358, 358,
    359, 360, 361, 362, 363, 367, 368, 370, 373, 377, 380, 381, 382, 382,
    383, 385, 392, 395, 396, 401, 404, 405, 406, 407, 408, 411, 413, 414,
    415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 433, 435, 438,
    439, 440, 441, 445, 448, 451, 453, 455, 456, 458, 459, 460, 464, 465,
    466, 467, 468, 469, 469, 470, 474, 475, 476, 477, 478, 479, 480, 482,
    483, 484, 486, 490, 490, 491, 493, 496, 497, 498, 500, 503, 506, 509,
    509, 511, 513, 514, 516, 517, 518, 522, 523, 524, 525, 526, 527, 528,
    532, 533, 534, 535, 536, 537, 541, 542, 543, 544, 545, 546, 547, 548,
    549, 552, 555, 558, 560, 564, 565, 566, 566, 569, 574, 579, 581, 582,
    587, 589, 590, 594, 595, 596, 597, 597, 597, 598, 599, 600, 604, 605,
    606, 607, 607, 607, 608, 609, 610, 611, 612, 613, 617, 620, 621, 621,
    623, 625, 625, 627, 631, 632, 636, 637, 638, 639, 640, 641, 642, 643,
    644, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 655, 656, 671,
    672, 672, 672, 672, 672, 673, 673, 673, 674, 675, 676, 677, 678, 682,
    682, 683, 684, 684, 685, 686, 686, 686, 688, 689, 690, 691, 692, 697,
    698, 699, 700, 701, 701, 706, 707, 707, 708, 708, 708, 711, 712, 715,
    717, 720, 723, 723, 723, 723, 727, 732, 733, 736, 737, 741, 743, 744,
    745, 747, 748, 749, 751, 751, 752, 753, 754, 756, 757, 758, 759, 761,
    764, 767, 770, 771, 772, 774, 778, 782, 783, 787, 788, 789, 790, 790,
    792, 792, 811, 821, 826, 827, 829, 835, 840, 841, 842, 845, 845, 850,
    851, 852, 853, 854, 855, 856, 858, 859, 860, 861, 862, 863, 864, 865,
    866, 866, 866, 866, 867, 867, 868, 869, 870, 870, 871, 872, 872, 873,
    873, 873, 873, 873, 874, 874, 875, 875, 875, 875, 875, 875, 875, 875,
    875, 891, 892, 897, 898, 899, 900, 900, 901, 902, 903, 904, 909, 910,
    911, 912, 912, 913, 914, 915, 919, 922, 922, 923, 924, 925, 927, 928,
    929, 930, 931, 932, 933, 934, 935, 935, 937, 938, 939, 940, 940, 945,
    945, 945, 945, 946, 947, 948, 949, 952, 955, 958, 961, 964, 966, 970,
    970, 970, 974, 975, 976, 979, 982, 982, 985, 985, 994, 1003, 1006, 1006,
    1008, 1017, 1020, 1021, 1022, 1023, 1024, 1024, 1024, 1024, 1028, 1029,
    1029, 1029, 1030, 1031, 1033, 1033, 1034, 1035, 1036, 1036, 1037, 1038,
    1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1048, 1049, 1050, 1051,
    1052, 1053, 1056, 1058, 1062, 1063, 1064, 1068, 1072, 1076, 1080, 1084,
    1086, 1090, 1091, 1094, 1096, 1097, 1100, 1104, 1105, 1110, 1115, 1116,
    1117, 1118, 1122, 1149, 1153, 1154, 1174, 1191, 1200, 1204, 1209, 1224,
    1236, 1237, 1238, 1238, 1238, 1238, 1238, 1239, 1239, 1240, 1244, 1244,
    1245, 1246, 1246, 1246, 1246, 1247, 1250, 1251, 1252, 1253, 1255, 1257,
    1258, 1259, 1260, 1260, 1261, 1262, 1262, 1262, 1263, 1264, 1264, 1265,
    1266, 1267, 1268, 1269, 1270, 1271, 1273, 1277, 1277, 1277, 1279, 1279,
    1281, 1283, 1283, 1285, 1285, 1286, 1288, 1289, 1299, 1301, 1324, 1326,
    1327, 1332, 1335, 1340, 1341, 1342, 1343, 1344, 1346, 1348, 1350, 1352,
    1354, 1356, 1358, 1360, 1362, 1364, 1366, 1368, 1370, 1371, 1372, 1374,
    1375, 1377, 1377, 1397, 1399, 1402, 1404, 1404, 1423, 1425, 1426, 1427,
    1428, 1429, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
    1439, 1440, 1440, 1441, 1442, 1442, 1442, 1442, 1443, 1444, 1445, 1448,
    1449, 1473, 1474, 1475, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
    1486, 1487, 1488, 1488, 1488, 1488, 1489, 1489, 1489, 1489, 1490, 1490,
    1491, 1491, 1492, 1505, 1505, 1505, 1505, 1506, 1507, 1508, 1509, 1509,
    1509, 1509, 1510, 1510, 1510, 1511, 1512, 1514, 1518, 1518, 1519, 1520,
    1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
    1532, 1533, 1534, 1534, 1535, 1536, 1537, 1538, 1538, 1539, 1539, 1542,
    1542, 1543, 1544, 1544, 1565, 1565, 1567, 1568, 1569, 1570, 1571, 1572,
    1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
    1587, 1590, 1591, 1592, 1592, 1592, 1594, 1595, 1596, 1597, 1598, 1600,
    1603, 1605, 1606, 1608, 1629, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
    1639, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1651, 1652,
    1654, 1655, 1656, 1657, 1658, 1660, 1661, 1662, 1662, 1664, 1665, 1667,
    1669, 1671, 1673, 1674, 1676, 1677, 1678, 1678, 1680, 1680, 1681, 1682,
    1682, 1683, 1683, 1683, 1685, 1686, 1687, 1687, 1690, 1690, 1691, 1691,
    1693, 1701, 1701, 1701, 1701, 1747 };

/* Stoichiometric coefficients in the Jacobian formulation */
__device__
double COEF[1747] = { 1.0, 1.0, 0.4, 0.01, 0.2, 0.28, 0.45, 0.06, 0.4, 0.2,
    0.06, 0.28, 0.01, 0.45, 0.07, 0.2, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5,
    0.29, 0.5, 0.5, 0.5, 0.5, 0.2, 0.29, 0.07, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5,
    0.5, 0.5, 0.5, 0.5, 0.5, 0.0054433, 0.04417, 1.075, 0.08103, 0.08103,
    0.83663, 0.08103, 0.08103, 0.08103, 0.00105, 0.00105, 0.00105, 0.0034,
    0.0034, 0.007, 0.007, 0.007, 0.00105, 0.007, 0.0034, 0.83663, 0.08103,
    0.00105, 0.007, 0.08103, 0.08103, 0.00105, 0.007, 0.0054433, 0.04417,
    0.0034, 0.08103, 0.08103, 1.075, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0,
    -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.4, 0.4, -1.0,
    -1.0, -1.0, 0.6, -1.0, 1.0, 1.0, 0.6, 1.0, -1.0, 1.0, 0.6, 0.6, -1.0,
    -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0,
    -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.2033, 0.1314,
    0.17667, -1.0, 1.075, 0.06936, 0.06936, 0.06936, 0.06936, 0.06936,
    0.06936, 0.0021, 0.0021, 0.0021, 0.01133, 0.01133, 0.01353, 0.01353,
    0.01353, 0.0021, 0.01353, 0.01133, 0.06936, 0.06936, 0.0021, 0.01353,
    0.06936, 0.06936, 0.2033, 0.0021, 0.01353, 0.1314, 0.17667, 0.01133,
    0.06936, 0.06936, -1.0, 1.075, 0.3833, 0.22083, -1.0, 1.075, 0.27087,
    0.27087, 0.27087, 0.27087, 0.27087, 0.27087, 0.014, 0.014, 0.014,
    0.0056667, 0.0056667, 0.04013, 0.04013, 0.04013, 0.014, 0.04013,
    0.0056667, 0.27087, 0.27087, 0.014, 0.04013, 0.27087, 0.27087, 0.014,
    0.04013, 0.3833, 0.22083, 0.0056667, 0.27087, 0.27087, -1.0, 1.075,
    0.49289, 0.30917, -1.0, 0.459, 0.459, 0.459, 0.459, 0.459, 0.459, 0.0525,
    0.0525, 0.0525, 0.11667, 0.11667, 0.11667, 0.0525, 0.11667, 0.459, 0.459,
    0.0525, 0.11667, 0.459, 0.459, 0.0525, 0.11667, 0.49289, 0.30917, 0.459,
    0.459, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0,
    1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.25,
    0.17, -1.0, -0.5, -0.5, 0.25, 0.17, -1.0, 1.0, -1.0, 1.0, 0.25, 1.0,
    0.25, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0,
    -1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0,
    -1.0, 0.02, 0.02, 0.09, 1.0, 1.0, 1.0, 0.09, 0.02, 0.02, -1.0, -1.0,
    -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, 1.0, -1.0, -1.0, 1.0,
    0.046, -1.0, 1.0, 0.046, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 2.0, 1.0,
    1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 0.42, 0.14, -1.0,
    0.14, 0.33, 0.14, 1.87, 1.55, 2.0, 2.0, 0.22, 0.25, 0.5, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 0.95, 0.475, 0.95, 0.23, 1.0, 0.475, 0.95, 0.25,
    0.42, 0.33, 0.23, 0.14, 0.14, 0.14, 0.22, 1.0, 2.0, 1.0, 0.95, -1.0, 1.0,
    2.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.46, -1.0, -1.0,
    -1.0, -1.0, 0.46, -1.0, -1.0, 2.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0,
    -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.16, 0.16, 0.16, 0.89,
    0.445, 0.89, 0.16, 0.445, 0.89, 0.16, -1.0, 0.16, 0.89, -1.0, 1.0, -1.0,
    -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 0.83, -1.0, -1.0, -1.0,
    -1.0, -1.0, -1.0, -1.0, -1.0, 0.83, 1.0, 1.0, 2.0, 0.79, 0.65, -1.0,
    -1.0, 0.4, 0.6, 0.6, 0.6, 0.6, 0.4, 1.0, 0.65, 0.79, -1.0, 0.6, 0.6, 1.0,
    -1.0, 0.806, 0.806, 0.806, -1.0, -1.0, -1.0, 0.7, 0.7, 0.7, 0.7, 0.806,
    0.7, 0.806, -1.0, 0.7, 0.806, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0,
    -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0,
    -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0,
    0.025, 0.53, 0.69, 0.75, 0.75, 1.06, 1.39, 1.39, 0.1, 0.55, 0.55, -1.0,
    -1.0, 0.8, 1.0, 1.0, 1.0, 0.1, 0.8, 0.25, 0.26, 0.26, 0.26, 0.75, 1.39,
    0.55, 1.0, 0.25, 0.69, 1.06, 0.1, 0.8, 0.1, 0.53, 1.0, 0.26, 0.75, 1.39,
    0.55, 1.0, 0.025, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0,
    -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0,
    0.25, 0.75, 0.9, 1.0, -1.0, -1.0, -1.0, -1.0, 2.0, 1.0, 2.0, -1.0, 1.0,
    -1.0, 2.0, -1.0, 2.0, -1.0, 0.25, 0.75, 0.9, 1.0, 0.75, -1.0, -1.0, -1.0,
    -1.0, -1.0, -1.0, -1.0, -1.0, 0.75, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0,
    0.1, 1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, 0.1, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -2.0, 1.0, -1.0, -1.0, -1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 0.45, 0.45, 0.45, 0.9, 0.17, 0.17, 0.17,
    0.5, 1.0, -1.0, -1.0, -1.0, 0.11, 0.055, 0.11, 0.75, 0.17, 0.45, 0.055,
    0.11, 0.17, 0.45, 1.0, 0.5, 0.9, 1.0, 0.75, 1.0, -1.0, 1.0, 0.17, 0.45,
    0.11, -1.0, 1.0, 0.009, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 0.04, 0.53,
    0.58, 0.13, 0.45, 1.0, 1.0, 0.77, 0.04, 0.8, 0.28, 0.89, 0.14, 1.6, 1.55,
    0.8, 1.0, 1.25, 0.5, 1.0, 1.0, 0.75, 0.5, 1.0, 1.75, 1.0, 2.0, -1.0,
    -1.0, -1.0, -1.0, 0.5, 0.25, 1.4, 0.4, 0.4, 1.0, 0.18, 0.75, 0.09, 0.84,
    1.0, 1.5, 0.75, 0.84, 0.77, 0.8, 1.55, 1.25, 0.89, 0.75, 1.0, 1.0, 1.0,
    0.5, 1.0, 1.0, 1.75, 1.0, 1.4, 1.0, 0.09, 0.04, 1.6, 1.0, 0.28, 1.0,
    0.25, 1.0, 0.75, 1.0, 0.53, 0.18, 0.58, 0.04, 0.75, -1.0, 0.4, 1.0, 0.8,
    0.5, 0.14, 1.0, 0.4, 0.009, -1.0, 0.5, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0,
    -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 0.9,
    1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0,
    -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0,
    -1.0, -1.0, -1.0, -1.0, 1.0, 0.25, 0.4, 0.4, 0.4, -1.0, -1.0, -1.0, 0.4,
    0.25, -1.0, -1.0, 0.4, 0.4, -1.0, 1.0, 0.08, 0.24, 1.0, 0.35, 0.2, -1.0,
    -1.0, 1.0, 0.036, 1.0, 0.036, 0.08, 0.24, 0.2, 0.35, -1.0, 0.075, 0.65,
    0.5, 0.38, 0.41, 0.41, 0.35, 0.46, 0.46, 1.45, 0.725, 0.725, 0.2, 0.35,
    0.6, 1.0, 0.75, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 2.0, 0.8, 1.0, 1.0, 1.0,
    0.72, 0.2, -1.0, -1.0, -1.0, 1.0, 0.75, 1.0, 0.75, 0.77, 0.77, 0.75,
    0.77, 0.41, 0.46, 0.35, 0.75, 0.725, 1.0, 1.0, 0.75, 0.38, 0.35, 0.2,
    1.0, 1.45, 1.0, 1.0, 0.8, 0.5, 0.72, 0.65, -1.0, 1.0, 1.0, 0.77, 0.41,
    0.46, 0.6, 1.0, 0.725, 1.0, 1.0, 0.075, -1.0, 0.5, 1.0, 0.2, 0.16, 1.0,
    -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.2, 0.16, -1.0, 1.0, 1.0,
    0.25, 0.17, 0.17, 1.0, 0.1, 1.0, 1.0, 1.0, 0.12, 1.0, -1.0, 1.0, 0.1,
    1.0, 0.1, 0.23, 0.25, 0.8, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 2.0, 1.0,
    0.32, 0.98, 0.92, -1.0, 1.0, 0.5, 0.76, -1.0, 1.0, 0.5, 1.0, -1.0, 1.0,
    0.5, 1.0, -1.0, 1.0, 0.5, 1.0, -1.0, 1.0, 0.5, -1.0, 1.0, 1.0, -1.0, 2.0,
    1.0, 1.0, 0.75, -1.0, 1.0, -1.0, 0.5, 1.0, 2.0, 1.0, 1.0, 0.92, -1.0,
    0.46, 0.92, -2.0, 0.65, -1.0, 2.0, 1.0, 1.0, 0.8, -1.0, 2.0, 1.0, 1.0,
    0.26, 1.0, 1.0, 1.0, -1.0, 1.0, 0.5, -1.0, -1.0, -1.0, -2.0, -2.0, -1.0,
    -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0,
    -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.964, -1.0, 1.0,
    0.5, -1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.5,
    2.0, 2.0, 0.46, 1.0, 1.0, 0.5, 2.0, 2.0, -1.0, 1.0, 0.964, 0.92, 0.76,
    1.0, 1.0, 1.0, 0.92, 1.0, 1.0, 1.0, 1.0, 0.8, 0.65, 1.0, 0.75, 1.0, -1.0,
    0.12, 0.23, 0.26, 0.25, 0.1, 0.1, 0.32, 1.0, -1.0, 1.0, 0.5, -1.0, 1.0,
    1.0, 1.0, 1.0, -1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1.0,
    1.0, 0.92, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 0.17, 0.25, 0.17, 0.1,
    1.0, 1.0, 1.0, 0.83, 0.5, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0,
    -1.0, 0.83, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0,
    2.0, 1.0, -1.0, 1.0, 0.92, 0.76, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 2.0,
    1.0, 1.0, 2.0, -1.0, 1.0, 0.65, 1.0, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0,
    0.964, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0,
    1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 0.964, 0.92, 0.76, 1.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 0.8, 0.65, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0,
    2.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.5,
    0.22, 0.08, -1.0, 1.0, -1.0, 1.0, -1.0, 0.5, -1.0, 0.5, -1.0, 0.5, -1.0,
    0.5, -1.0, 0.5, -1.0, 1.0, -1.0, 1.0, -1.0, 0.5, -1.0, 1.0, -1.0, 1.0,
    -1.0, 1.0, 0.31, 1.0, -1.0, 0.5, -1.0, -1.0, 0.5, -1.0, -1.0, -2.0, -1.0,
    -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -0.5, -1.0, -1.0, -1.0, -1.0,
    -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 0.22, 0.31, 0.08, -1.0, 0.5, 1.0,
    -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 2.0, 1.0, 1.0, 1.0, 1.0,
    1.0, 0.5, 1.0, 1.0, 1.0, 0.5, 1.0, 1.0, -1.0, -2.0, -1.0, -1.0, -1.0,
    -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0,
    -1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0,
    -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0,
    -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0,
    1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0,
    -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0,
    -1.0, -1.0, 0.42, 0.42, 1.0, -1.0, -1.0, -1.0, 0.42, 0.42, -1.0, -1.0,
    -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0,
    -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0,
    -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0,
    -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0,
    1.0, 1.0, 1.0, 1.0, 0.1, -1.0, -1.0, 0.1, 0.02, -1.0, -1.0, -1.0, 1.0,
    -1.0, -1.0, -1.0, -1.0, 0.25, -1.0, 1.0, 1.0, 1.0, 0.05, 0.03, -0.95,
    -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.03, -1.0, 0.05,
    0.25, 0.1, 0.1, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0,
    -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -0.95, -1.0, -1.0, -1.0,
    -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0,
    -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 2.0, 1.0, -1.0, -1.0,
    1.0, -0.5, -1.9, -1.0, -1.0, -1.0, 2.0, -1.0, -1.0, -1.0, -1.0, 0.85,
    -1.0, -1.0, 0.85, -1.0, 0.1, 1.0, -1.0, -1.0, 0.25, -1.0, -1.0, 0.19,
    -1.0, -1.0, 1.0, -0.5, -1.0, -1.0, 2.0, -1.0, 0.14, -1.0, -1.0, 1.0, 1.0,
    -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 0.1, 0.14, 0.25, 0.85, 0.85, 0.19,
    -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0,
    -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.9, -1.0, -1.0, -1.0, -1.0,
    -1.0, -1.0, -0.5, -0.5, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0,
    -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0 };


/*----------------------------------- d_Jac0 ----------------------------------*/
/* CUDA kernel for Jac                                                         */
/*                                                                             */
/* @param[in]     ncells32 A multiple of 32 grid cells                         */
/* @param[in]     var      Variable species concentrations                     */
/* @param[in]     fix      Fixed species concentrations                        */
/* @param[in]     rct      Reaction rates                                      */
/* @param[out]    B        Scratch memory                                      */
/*-----------------------------------------------------------------------------*/
__global__
void d_Jac0(size_t const ncells32, double const * var, double const * fix,
    double const * rct, double* B)
{
    size_t idx = blockDim.x*blockIdx.x + threadIdx.x;
    size_t iidx = idx / ncells32;
    size_t cidx = idx % ncells32;

    var += cidx;
    fix += cidx;
    rct += cidx;
    B += cidx;

    if(iidx < 354) {
        double acc = rct[IRCT[iidx]*ncells32] * LHS[iidx];
        for(int i=CVAR[iidx]; i<CVAR[iidx+1]; ++i) {
            acc *= var[IVAR[i]*ncells32];
        }
        for(int i=CFIX[iidx]; i<CFIX[iidx+1]; ++i) {
            acc *= fix[IFIX[i]*ncells32];
        }
        B[iidx*ncells32] = acc;
    }
}/* END d_Jac0 */


/*----------------------------------- d_Jac1 ----------------------------------*/
/* CUDA kernel for Jac                                                         */
/*                                                                             */
/* @param[in]     ncells32 A multiple of 32 grid cells                         */
/* @param[in]     B        Scratch memory                                      */
/* @param[out]    sjac     The row-compressed sparse Jacobian                  */
/*-----------------------------------------------------------------------------*/
__global__
void d_Jac1(size_t const ncells32, double const * B, double* sjac)
{
    size_t idx = blockDim.x*blockIdx.x + threadIdx.x;
    size_t jidx = idx / ncells32;
    size_t cidx = idx % ncells32;

    B += cidx;
    sjac += cidx;
    
    if(jidx < JAC_LU_NZ) {
        double acc = 0;
        for(int i=CINT[jidx]; i<CINT[jidx+1]; ++i) {
            acc += COEF[i] * B[IINT[i]*ncells32];
        }
        sjac[jidx*ncells32] = acc;
    }
}/* END d_Jac1 */



/*------------------------------------ Jac ------------------------------------*/
/* The Jacobian of variable species                                            */
/*                                                                             */
/* @param[in]     ncells32  A multiple of 32 grid cells                        */
/* @param[in]     d_var     Variable species concentrations in device memory   */
/* @param[in]     d_fix     Fixed species concentrations in device memory      */
/* @param[in]     d_rct     Reaction rates in device memory                    */
/* @param[out]    d_sjac    The row-compressed sparse Jacobian in device memory */
/* @param[in,out] d_scratch Scratch device memory                              */
/*-----------------------------------------------------------------------------*/
void Jac(size_t const ncells32, double const * d_var, double const * d_fix,
    double const * d_rct, double* d_sjac, double* d_scratch)
{
    size_t nThreads = 256;
    size_t nThreads0 = 354 * ncells32;
    size_t nThreads1 = JAC_LU_NZ * ncells32;
    size_t nBlocks0 = ((nThreads0 + 255) & ~255) >> 8;
    size_t nBlocks1 = ((nThreads1 + 255) & ~255) >> 8;

    d_Jac0<<<nBlocks0, nThreads>>>(ncells32, d_var, d_fix, d_rct, d_scratch);
    d_Jac1<<<nBlocks1, nThreads>>>(ncells32, d_scratch, d_sjac);
}/* END Jac */



/*------------------------ END kppa_CUDA_jacobian.h END -----------------------*/
