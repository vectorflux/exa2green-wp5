/*----------------------- BEGIN kppa_CUDA_solve.h BEGIN -----------------------*/
/* @file kppa_CUDA_solve.h                                                     */
/* @author charlesj                                                            */
/* @date 2015-01-22 16:21:36.144312                                            */
/* @brief Solve Ax=b by forward-backward substitution                          */
/*                                                                             */
/* Solve Ax=b by forward-backward substitution                                 */
/*                                                                             */
/* This file was generated by Kppa: http://www.paratools.com/Kppa              */
/*-----------------------------------------------------------------------------*/

#ifndef __KPPA_CUDA_SOLVE_H__
#define __KPPA_CUDA_SOLVE_H__



#ifdef __cplusplus
extern "C" {
#endif


/*----------------------------------- Solve -----------------------------------*/
/* Solve Ax=b in place by back substitution                                    */
/*                                                                             */
/* @param[in]     ncells32 A multiple of 32 grid cells                         */
/* @param[in]     d_A      Row-compressed matrix with zero fill in device memory */
/* @param[in,out] d_x      Input and solution vector in device memory          */
/*-----------------------------------------------------------------------------*/
void Solve(size_t const ncells32, double const * d_A, double* d_x);



#ifdef __cplusplus
} /* extern "C" */
#endif

#endif /* __KPPA_CUDA_SOLVE_H__ */
/*------------------------- END kppa_CUDA_solve.h END -------------------------*/
